{"version":3,"sources":["Components/BST.jsx","Components/Heading.jsx","Components/Sorting.jsx","utils/addBars.js","App.js","utils/functions.js","reportWebVitals.js","index.js"],"names":["BST","styleHeading","fontSize","textAlign","color","marginTop","Heading","className","style","options","strings","autoStart","loop","delay","Sorting","numberOfBars","addBars","slider","barList","onChangeAlgo","Sort","onChangeSpeed","useState","currentAlgo","setCurrentAlgo","setDelay","changeAlgo","algo","fontWeight","Slider","valueLabelDisplay","max","min","defaultValue","onChange","Dropdown","Toggle","variant","id","Menu","Item","as","onClick","Button","type","height","tmpBarList","i","length","push","duration","toString","backgroundColor","width","borderRadius","marginLeft","App","ds","setDs","setBarList","setNumberOfBars","deactivate","setDeactivate","addElements","tmpList","Math","ceil","floor","random","barHeight","barColor","bubblesort","a","items","j","t","href","target","rel","speed","sorting","e","newValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a6fa0a1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction BST() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BST\r\n","import React from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\n\r\nconst styleHeading = {\r\n    fontSize: \"2.5rem\",\r\n\ttextAlign: \"center\",\r\n\tcolor: \"antiquewhite\",\r\n\tmarginTop: \"70px\"\r\n}\r\n\r\nfunction Heading() {\r\n\treturn (\r\n\t\t<div className='heading' style={styleHeading}>\r\n\t\t\t<span>\r\n\t\t\t\t<Typewriter\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tstrings: [\"Visualising Algorithms...\"],\r\n\t\t\t\t\t\tautoStart: true,\r\n\t\t\t\t\t\tloop: true,\r\n\t\t\t\t\t\tdelay: 200,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Heading;\r\n","import { Button, Slider } from \"@material-ui/core\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction Sorting({\r\n\tnumberOfBars,\r\n\taddBars,\r\n\tbarList,\r\n\tslider,\r\n\tSort,\r\n\tonChangeAlgo,\r\n\tonChangeSpeed,\r\n}) {\r\n\r\n\tconst [currentAlgo, setCurrentAlgo] = useState(\"BubbleSort\");\r\n\tconst [delay, setDelay] = useState(400);\r\n\r\n\tconst changeAlgo = algo => {\r\n\t\tsetCurrentAlgo(algo);\r\n\t\tonChangeAlgo(currentAlgo);\r\n\t}\r\n\r\n\tconst showSpeed = () => {\r\n\t\tif (delay === 600) {\r\n\t\t\treturn \"Slow\";\r\n\t\t} else if (delay === 400) {\r\n\t\t\treturn \"Medium\";\r\n\t\t} else {\r\n\t\t\treturn \"Fast\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className='container1'>\r\n\t\t\t<div className='left'>{addBars}</div>\r\n\t\t\t<div className='right'>\r\n\t\t\t\t<div className='rightUp'>\r\n\t\t\t\t\t<span style={{color: \"white\", fontSize:\"18px\", fontWeight: \"200\"}}>Slide to add or delete bars, </span>\r\n\t\t\t\t\t<span className='badge badge-success' style={{fontSize:\"15px\"}}>\r\n\t\t\t\t\t\tCurrently <span className='badge-light badge'>{numberOfBars}</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='rightDown'>\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\tvalueLabelDisplay='auto'\r\n\t\t\t\t\t\tmax={18}\r\n\t\t\t\t\t\tmin={2}\r\n\t\t\t\t\t\tdefaultValue={numberOfBars}\r\n\t\t\t\t\t\tonChange={slider}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='lower123'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t<Dropdown.Toggle\r\n\t\t\t\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\t\t\t\tid='dropdown-basic'>\r\n\t\t\t\t\t\t\t\t\t{currentAlgo}\r\n\t\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\tas='button'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\tchangeAlgo(\"BubbleSort\")\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\tBubbleSort\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\tas='button'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\tchangeAlgo(\"InsertionSort\")\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\tInsertionSort\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\tas='button'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => changeAlgo(\"QuickSort\")}>\r\n\t\t\t\t\t\t\t\t\t\tQuickSort\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t<Dropdown.Toggle\r\n\t\t\t\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\t\t\t\tid='dropdown-basic'>\r\n\t\t\t\t\t\t\t\t\t{showSpeed()}\r\n\t\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\tas='button'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDelay(600)}>\r\n\t\t\t\t\t\t\t\t\t\tSlow\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\tas='button'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDelay(400)}>\r\n\t\t\t\t\t\t\t\t\t\tMedium\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\tas='button'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDelay(200)}>\r\n\t\t\t\t\t\t\t\t\t\tFast\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"sort\">\r\n\t\t\t\t\t\t<Button type=\"button\" className=\"btn-123\">SORT</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Sorting;\r\n","import React from \"react\";\r\nimport AnimateHeight from \"react-animate-height\";\r\nimport \"../App.css\";\r\n\r\nconst barStyle = (color, height) => {\r\n    const h = height.toString() + \"px\";\r\n    return {\r\n        height: h,\r\n        backgroundColor: color,\r\n        width: \"25px\",\r\n        borderRadius: \"0 0 4px 4px\",\r\n        marginLeft: \"10px\",\r\n        textAlign: \"center\",\r\n        fontSize: \"15px\",\r\n        fontWeight: \"200\"\r\n    };\r\n};\r\n\r\nconst addBars = barList => {\r\n    let tmpBarList = [];\r\n    for (let i = 0; i < barList.length; i++){\r\n        tmpBarList.push(\r\n            <AnimateHeight duration={500} height={barList[i][\"barHeight\"]}>\r\n                <div className=\"bar\" style={barStyle(barList[i][\"barColor\"], barList[i][\"barHeight\"])} key={i}>\r\n                    {barList[i][\"barHeight\"]}\r\n                </div>\r\n            </AnimateHeight>\r\n        );\r\n    }\r\n    return tmpBarList;\r\n};\r\n\r\nexport default addBars;","import { Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport BST from \"./Components/BST\";\nimport Heading from \"./Components/Heading\";\nimport Sorting from \"./Components/Sorting\";\nimport addBars from \"./utils/addBars\";\nimport { getRandomInt } from \"./utils/functions\";\n\nfunction App() {\n\tconst [ds, setDs] = useState(\"sorting\");\n\tconst [barList, setBarList] = useState([]);\n\tconst [numberOfBars, setNumberOfBars] = useState(13);\n\tconst [delay, setDelay] = useState(400);\n\tconst [currentAlgo, setCurrentAlgo] = useState(\"BubbleSort\");\n\tconst [deactivate, setDeactivate] = useState(false);\n\n\tconst onChangeAlgo = (algo) => {\n\t\tsetCurrentAlgo(algo);\n\t};\n\n\tconst onChangeSpeed = (speed) => {\n\t\tsetDelay(speed);\n\t};\n\n\tconst sorting = () => {\n\t\tif (!deactivate) {\n\t\t\tif (currentAlgo === \"BubbleSort\") return bubblesort;\n\t\t}\n\t};\n\n\tconst handleChange = (e, newValue) => {\n\t\tif (!deactivate) {\n\t\t\tsetNumberOfBars(newValue);\n\t\t\taddElements();\n\t\t}\n\t};\n\n\tconst addElements = () => {\n\t\tlet i = 0,\n\t\t\theight = 0,\n\t\t\ttmpList = [];\n\t\twhile (i < numberOfBars) {\n\t\t\theight = getRandomInt(20, 380);\n\t\t\ttmpList.push({\n\t\t\t\tbarHeight: height,\n\t\t\t\tbarColor: \"beige\",\n\t\t\t});\n\t\t\ti++;\n\t\t}\n\t\tsetBarList(tmpList);\n\t};\n\n\t// bubblesort\n\tconst bubblesort = async () => {\n\t\tsetDeactivate(true);\n\t\tlet items = barList;\n\t\tlet length = items.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tfor (let j = 0; j < length - i - 1; j++) {\n\t\t\t\tif (items[j][\"barHeight\"] > items[j + 1][\"barHeight\"]) {\n\t\t\t\t\tlet t = items[j][\"barHeight\"];\n\t\t\t\t\titems[j][\"barHeight\"] = items[j + 1][\"barHeight\"];\n\t\t\t\t\titems[j + 1][\"barHeight\"] = t;\n\t\t\t\t}\n\t\t\t\tsetBarList(items);\n\t\t\t}\n\t\t}\n\t\tsetBarList(items);\n\t\tsetDeactivate(false);\n\t};\n\n\treturn (\n\t\t<main className='app'>\n\t\t\t<header>\n\t\t\t\t<Heading />\n\t\t\t</header>\n\t\t\t<div className='link'>\n\t\t\t\t<a\n\t\t\t\t\thref='https://github.com/dubeyji0110/VisualizingAlgorithms/'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t\trel='noreferrer'>\n\t\t\t\t\t<i className='fab fa-github'></i> Github Repo {\"</>\"}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<section className=\"buttons\">\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => setDs(\"sorting\")}\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tds === \"sorting\" ? \"selectedBtn\" : \"unselectedBtn\"\n\t\t\t\t\t}>\n\t\t\t\t\tSorting\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => setDs(\"tree\")}\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName={ds === \"tree\" ? \"selectedBtn\" : \"unselectedBtn\"}>\n\t\t\t\t\tBinary Search Tree\n\t\t\t\t</Button>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t{ds === \"sorting\" ? (\n\t\t\t\t\t<Sorting\n\t\t\t\t\t\tnumberOfBars={numberOfBars}\n\t\t\t\t\t\tbarList={barList}\n\t\t\t\t\t\tonChangeAlgo={onChangeAlgo}\n\t\t\t\t\t\tonChangeSpeed={onChangeSpeed}\n\t\t\t\t\t\tSort={sorting()}\n\t\t\t\t\t\taddBars={addBars(barList)}\n\t\t\t\t\t\tslider={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<BST />\n\t\t\t\t)}\n\t\t\t</section>\n\t\t</main>\n\t);\n}\n\nexport default App;\n","export const getRandomInt = (min, max) => {\r\n\tmin = Math.ceil(min);\r\n\tmax = Math.floor(max);\r\n\treturn Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\nexport const timeout = (ms) => {\r\n\treturn new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}